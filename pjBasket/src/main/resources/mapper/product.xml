<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybatis.sql">

<resultMap id="pro_info" type="hashmap"></resultMap>
<select id="find_pro" parameterType="map" statementType="CALLABLE">
	{call find_pro(#{sto_code, jdbcType=INTEGER},
					  #{pro_barcode},
					  #{find_pro, 
						jdbcType=CURSOR, 
						mode=OUT, 
						javaType=java.sql.ResultSet, 
						resultMap=pro_info}
	)
	}
</select>

<resultMap id="prosearchList" type="hashmap"></resultMap>
<select id="search_pro" parameterType="map" statementType="CALLABLE">
	{call search_pro(
					  #{p_word, jdbcType=VARCHAR},
					  #{sto_code},
					  #{search_pro, 
						jdbcType=CURSOR, 
						mode=OUT, 
						javaType=java.sql.ResultSet, 
						resultMap=prosearchList}
	)
	}
</select>
 
 
 
 
<resultMap id="pro_list" type="hashmap"></resultMap>
<select id="pro_search" parameterType="map" statementType="CALLABLE">
	{call pro_search(#{sto_code, jdbcType=INTEGER},
					  #{pro_code, jdbcType=INTEGER},
					  #{pro_name, jdbcType=VARCHAR},
					  #{pro_category1, jdbcType=VARCHAR},
					  #{pro_category2, jdbcType=VARCHAR},
					  #{pro_search, 
						jdbcType=CURSOR, 
						mode=OUT, 
						javaType=java.sql.ResultSet, 
						resultMap=pro_list}
	)
	}
</select>

<select id="pro_detail" parameterType="map" resultType="map">
	SELECT pr.pro_code, pr.pro_name, pr.pro_price, pr.pro_img, pr.pro_barcode, 
			pr.sales_status, pd.pro_category1, pd.pro_category2, pd.pro_stock_ea 
	FROM product pr JOIN product_detail pd
	ON pr.pro_code = pd.pro_code
	<where>
	pr.pro_code = #{pro_code}
	</where>
</select>


<insert id="pro_insert" parameterType="map">
INSERT INTO product (pro_code,  pro_name , pro_price, pro_img, pro_barcode, sto_code, sales_status)
VALUES( seq_pro.nextval, #{pro_name} ,#{pro_price}, #{[pro_img]}, #{pro_barcode}, #{sto_code}, #{sales_status})
</insert>
<insert id="prod_insert" parameterType="map">
INSERT INTO product_detail (pro_code, pro_category1, pro_category2, pro_stock_ea)
VALUES(seq_pro.currval, #{pro_category1} , #{pro_category2}, #{pro_stock_ea})
</insert>


<delete id="pro_delete"  parameterType="map">
DELETE FROM PRODUCT
<if test="pro_code != null  and pro_code.length>0">
WHERE pro_code = #{pro_code}
</if>
</delete>

<delete id="prodt_delete" parameterType="map">
DELETE FROM product_detail 
<where>
pro_code = #{pro_code}
and sto_code = #{sto_code} 
</where>
</delete>
<!-- <select id="find_pro" parameterType="map" resultType="map"> -->
<!-- 	SELECT p.pro_code, p.pro_name, p.pro_price, p.pro_img, pd.pro_stock_ea -->
<!-- 	FROM product prJOIN product_detail pd -->
<!-- 	ON pr.pro_code = pd.pro_code -->
<!-- 	ON pr.sto_code = pd.sto_code -->
<!-- 	WHERE pr.sto_code = #{sto_code} -->
<!-- 	AND pr.pro_barcode = #{pro_barcode} -->
<!-- </select> -->

<!-- <select id="find_pro" parameterType="map" resultType="map"> -->
<!-- 	SELECT pr.pro_code, pr.pro_name , pr.pro_price  -->
<!--    ,pd.pro_stock_ea , pd.pro_category1 ,pd.pro_category2 -->
<!--    , pr.pro_img , pr.pro_barcode -->
<!-- 	FROM  product pr JOIN  product_detail pd -->
<!--  	ON pr.pro_code = pd.pro_code -->
<!-- <where> pr.sto_code = #{sto_code}   -->
<!-- 	AND pr.pro_name LIKE '%'|| #{pro_name} ||'%' -->
<!-- </where> -->
<!-- 	ORDER BY pr.pro_price ASC -->
<!-- </select> -->

<update id="pro_update" parameterType="map">
	UPDATE product SET
		<if test="pro_price !=null">
	 		pro_price = #{pro_price},
		</if>
		<if test="pro_barcode !=null">
			 pro_barcode = #{pro_barcode},
		</if>
			sto_code = #{sto_code}
		<where>
			AND pro_code = #{pro_code}
			
		</where>
</update>

<update id="pro_stock" parameterType="map">
	<selectKey order="BEFORE" keyProperty="existing" resultType="int">
		SELECT pro_stock_ea
		FROM product_detail
		WHERE pro_code = #{pro_code}
	</selectKey>
	UPDATE product_detail  SET pro_stock_ea = (#{pro_stock_ea} + #{existing})
	WHERE pro_code = #{pro_code}
</update>

<update id="prod_update" parameterType="map">
	UPDATE product_detail  SET 
		<if test="pro_category1 !=null and pro_category1.length > 0">
			 pro_category1 = #{pro_category1},
		</if>
		<if test="pro_category2 !=null and pro_category2.length > 0">
			pro_category2 = #{pro_category2},
		</if>
		<if test="pro_stock_ea !=null and pro_stock_ea.length > 0">
		  pro_stock_ea = #{pro_stock_ea}
		</if>
		<where>
			AND pro_code = #{pro_code}
	
		</where>
</update>


</mapper>